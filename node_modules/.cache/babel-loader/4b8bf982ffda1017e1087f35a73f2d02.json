{"ast":null,"code":"import \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.values\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport _taggedTemplateLiteral from \"/Users/hollyos/dev/work/vowaid/armory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hollyos/dev/work/vowaid/armory/src/themes/vowaid/Colors.stories.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  bottom: 0.1em;\\n  color: \", \";\\n  left: 3%;\\n  margin-top: -1.6em;\\n  position: absolute;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 3%;\\n\\n  p {\\n    margin: 0;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  height: 100px;\\n  position: relative;\\n  width: 100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  list-style: none;\\n  padding: 0;\\n  width: 100%;\\n\\n  > li {\\n    width: 10%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Color from 'color';\nimport uuid from 'uuid/v4'; // Storybook\n// Components\n\nimport { StoryArticle, StoryHeader, StorySection } from '../../utils/storybook/StyledStoryComponents'; // Utils\n\nimport { createStory } from '../../utils/storybook/storybookUtils';\nimport Colors from './colors';\nvar colorNames = Object.keys(Colors);\nvar ColorGroups = {\n  SHADE: 'shade',\n  TINT: 'tint'\n};\nvar ColorVariants = [];\n\nfor (var index = 10; index <= 100; index += 10) {\n  ColorVariants.push(index);\n}\n\nvar ColorList = styled.ul(_templateObject());\nvar ColorBlock = styled.div(_templateObject2(), function (_ref) {\n  var background = _ref.background;\n  return background;\n});\nvar TextBlock = styled.div(_templateObject3());\nvar ColorTitle = styled.h4(_templateObject4(), function (_ref2) {\n  var color = _ref2.color;\n  return color;\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, \"hex:\");\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, \"rgb:\");\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, \"hsl:\");\n\nvar generateColorGroup = function generateColorGroup(colorName, colorGroup) {\n  return React.createElement(StorySection, {\n    key: uuid(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(StoryHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, colorGroup)), React.createElement(ColorList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, ColorVariants.map(function (colorVariant) {\n    var colorValues = Colors[colorName][colorGroup][colorVariant];\n    var color = Color(colorValues.hex);\n    var titleColor = color.isLight() ? Colors.grayscale.shade[20].hex : Colors.grayscale.tint[90].hex;\n    var rgb = color.rgb().array().join(', ');\n    var hsl = color.hsl().array();\n    hsl.forEach(function (value, index) {\n      hsl[index] = Math.round(value);\n    });\n    hsl = hsl.join(', ');\n    return React.createElement(\"li\", {\n      key: uuid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(ColorBlock, {\n      background: colorValues.hex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ColorTitle, {\n      color: titleColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, colorVariant)), React.createElement(TextBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, _ref3, \" \", color.hex()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, _ref4, \" \", rgb), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, _ref5, \" \", hsl)));\n  })));\n};\n\ngenerateColorGroup.displayName = \"generateColorGroup\";\nvar ColorsStory = createStory('Themes|VOWAID/Colors');\n\nvar _ref6 =\n/*#__PURE__*/\nReact.createElement(StoryHeader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, \"Colors\"));\n\nColorsStory.add('all', function () {\n  return React.createElement(StoryArticle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, _ref6, colorNames.map(function (colorName) {\n    return React.createElement(StorySection, {\n      key: uuid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(StoryHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, colorName)), Object.values(ColorGroups).map(function (colorGroup) {\n      return generateColorGroup(colorName, colorGroup);\n    }));\n  }));\n});\n\nvar _loop = function _loop(_index) {\n  var colorName = colorNames[_index];\n\n  var _ref7 =\n  /*#__PURE__*/\n  React.createElement(StoryHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, colorName));\n\n  ColorsStory.add(colorName, function () {\n    return React.createElement(StoryArticle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, _ref7, Object.values(ColorGroups).map(function (colorGroup) {\n      return generateColorGroup(colorName, colorGroup);\n    }));\n  });\n};\n\nfor (var _index2 = 0; _index2 < colorNames.length; _index2++) {\n  _loop(_index2);\n}\n\n;","map":{"version":3,"sources":["/Users/hollyos/dev/work/vowaid/armory/src/themes/vowaid/Colors.stories.js"],"names":["React","styled","Color","uuid","StoryArticle","StoryHeader","StorySection","createStory","Colors","colorNames","Object","keys","ColorGroups","SHADE","TINT","ColorVariants","index","push","ColorList","ul","ColorBlock","div","background","TextBlock","ColorTitle","h4","color","generateColorGroup","colorName","colorGroup","map","colorVariant","colorValues","hex","titleColor","isLight","grayscale","shade","tint","rgb","array","join","hsl","forEach","value","Math","round","ColorsStory","add","values","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Color from 'color';\nimport uuid from 'uuid/v4';\n\n// Storybook\n\n// Components\nimport { StoryArticle, StoryHeader, StorySection } from '../../utils/storybook/StyledStoryComponents';\n\n// Utils\nimport { createStory } from '../../utils/storybook/storybookUtils';\nimport Colors from './colors';\n\nconst colorNames = Object.keys(Colors);\n\nconst ColorGroups = {\n  SHADE: 'shade',\n  TINT: 'tint',\n};\nconst ColorVariants = [];\n\nfor (let index = 10; index <= 100; index += 10) {\n  ColorVariants.push(index);\n}\n\nconst ColorList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n  width: 100%;\n\n  > li {\n    width: 10%;\n  }\n`;\n\nconst ColorBlock = styled.div`\n  background: ${({ background }) => background};\n  height: 100px;\n  position: relative;\n  width: 100%;\n`;\n\nconst TextBlock = styled.div`\n  padding: 0 3%;\n\n  p {\n    margin: 0;\n  }\n`;\n\nconst ColorTitle = styled.h4`\n  bottom: 0.1em;\n  color: ${({ color }) => color};\n  left: 3%;\n  margin-top: -1.6em;\n  position: absolute;\n`;\n\nconst generateColorGroup = (colorName, colorGroup) => (\n  <StorySection key={uuid()}>\n    <StoryHeader>\n      <h3>{colorGroup}</h3>\n    </StoryHeader>\n\n    <ColorList>\n      {ColorVariants.map((colorVariant) => {\n        const colorValues = Colors[colorName][colorGroup][colorVariant];\n        const color = Color(colorValues.hex);\n        const titleColor = (color.isLight()) ? Colors.grayscale.shade[20].hex : Colors.grayscale.tint[90].hex;\n\n        const rgb = color.rgb().array().join(', ');\n        let hsl = color.hsl().array();\n\n        hsl.forEach((value, index) => {\n          hsl[index] = Math.round(value);\n        });\n\n        hsl = hsl.join(', ');\n\n        return (\n          <li key={uuid()}>\n            <ColorBlock background={colorValues.hex}>\n              <ColorTitle color={titleColor}>{colorVariant}</ColorTitle>\n            </ColorBlock>\n\n            <TextBlock>\n              <p><strong>hex:</strong> {color.hex()}</p>\n              <p><strong>rgb:</strong> {rgb}</p>\n              <p><strong>hsl:</strong> {hsl}</p>\n            </TextBlock>\n          </li>\n        )\n      })}\n    </ColorList>\n  </StorySection>\n)\n\nconst ColorsStory = createStory('Themes|VOWAID/Colors');\n\nColorsStory.add('all', () => (\n  <StoryArticle>\n    <StoryHeader>\n      <h1>Colors</h1>\n    </StoryHeader>\n\n    {colorNames.map((colorName) => (\n      <StorySection key={uuid()}>\n        <StoryHeader>\n          <h2>{colorName}</h2>\n        </StoryHeader>\n\n        {Object.values(ColorGroups).map((colorGroup) => generateColorGroup(colorName, colorGroup))}\n      </StorySection>\n    ))}\n  </StoryArticle>\n));\n\nfor (let index = 0; index < colorNames.length; index++) {\n  const colorName = colorNames[index];\n\n  ColorsStory.add(colorName, () => (\n    <StoryArticle>\n      <StoryHeader>\n        <h1>{colorName}</h1>\n      </StoryHeader>\n\n      {Object.values(ColorGroups).map((colorGroup) => generateColorGroup(colorName, colorGroup))}\n    </StoryArticle>\n  ));\n};"]},"metadata":{},"sourceType":"module"}